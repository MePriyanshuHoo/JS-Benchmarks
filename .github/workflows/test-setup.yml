name: Test Setup and Validation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test-setup:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: [20, 22]
      fail-fast: false

    steps:
    - name: 🛒 Checkout repository
      uses: actions/checkout@v4

    - name: 📋 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 🟡 Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: 📦 Install dependencies
      run: |
        npm ci
        bun install --frozen-lockfile || echo "Bun install failed, continuing..."

    - name: 🔍 Verify installations
      run: |
        echo "Node.js version: $(node --version)"
        echo "npm version: $(npm --version)"
        echo "Bun version: $(bun --version || echo 'Bun not available')"

    - name: 🧪 Validate project setup
      run: npm run validate:quick

    - name: 🖥️ Test individual servers
      run: npm run test:servers

    - name: 📝 Test README generation (without results)
      run: |
        # Test that README generator handles missing results gracefully
        node -e "
        const { ReadmeGenerator } = require('./scripts/generate-readme.js');
        const gen = new ReadmeGenerator('nonexistent.json');
        const loaded = gen.loadResults();
        console.log('✅ README generator handles missing files correctly:', !loaded);
        "

    - name: 🏃‍♂️ Test benchmark script instantiation
      run: |
        node -e "
        const { BenchmarkRunner } = require('./scripts/benchmark.js');
        const benchmark = new BenchmarkRunner();
        console.log('✅ BenchmarkRunner instantiated successfully');
        console.log('Frameworks configured:', benchmark.frameworks.length);
        console.log('Runtimes configured:', benchmark.runtimes.length);
        "

    - name: 🔧 Test validation script
      run: |
        # Run validation but don't fail on warnings
        npm run validate:quick || echo "Validation completed with warnings"

    - name: 📊 Generate test summary
      run: |
        echo "## 🎯 Test Summary for ${{ matrix.os }} - Node.js ${{ matrix.node-version }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Setup**: Dependencies installed successfully" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Validation**: Project structure validated" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Servers**: All framework servers tested" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Scripts**: All utility scripts functional" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Node.js**: $(node --version)" >> $GITHUB_STEP_SUMMARY
        echo "**npm**: $(npm --version)" >> $GITHUB_STEP_SUMMARY
        echo "**Bun**: $(bun --version 2>/dev/null || echo 'Not available')" >> $GITHUB_STEP_SUMMARY

  test-workflows:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - name: 🛒 Checkout repository
      uses: actions/checkout@v4

    - name: 📋 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: 🔍 Validate workflow files
      run: |
        echo "Testing GitHub workflow files..."

        # Check workflow files exist
        workflows=(".github/workflows/monthly-benchmark.yml" ".github/workflows/pr-benchmark.yml")

        for workflow in "${workflows[@]}"; do
          if [ -f "$workflow" ]; then
            echo "✅ $workflow exists"

            # Basic YAML structure validation
            if grep -q "name:" "$workflow" && \
               grep -q "on:" "$workflow" && \
               grep -q "jobs:" "$workflow" && \
               grep -q "steps:" "$workflow"; then
              echo "✅ $workflow has valid structure"
            else
              echo "❌ $workflow missing required fields"
              exit 1
            fi
          else
            echo "❌ $workflow missing"
            exit 1
          fi
        done

        echo "✅ All workflow files validated successfully"

    - name: 📊 Generate workflow summary
      run: |
        echo "## 🔄 Workflow Validation Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Monthly Benchmark Workflow**: Valid YAML structure" >> $GITHUB_STEP_SUMMARY
        echo "✅ **PR Benchmark Workflow**: Valid YAML structure" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Test Workflow**: Currently executing successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🎯 **Next Steps**: Ready for automated monthly benchmarks!" >> $GITHUB_STEP_SUMMARY

  summary:
    runs-on: ubuntu-latest
    needs: [test-setup, test-workflows]
    if: always()

    steps:
    - name: 📊 Overall Test Summary
      run: |
        echo "## 🎉 Overall Test Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        if [ "${{ needs.test-setup.result }}" == "success" ] && [ "${{ needs.test-workflows.result }}" == "success" ]; then
          echo "✅ **Status**: All tests passed successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🚀 **Ready for Production**: The benchmark suite is fully functional" >> $GITHUB_STEP_SUMMARY
          echo "📅 **Monthly Automation**: Will run automatically on the 1st of each month" >> $GITHUB_STEP_SUMMARY
          echo "🔄 **PR Validation**: Will validate changes in pull requests" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Status**: Some tests failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔧 **Action Required**: Check individual job results above" >> $GITHUB_STEP_SUMMARY
        fi

        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Setup Results**: ${{ needs.test-setup.result }}" >> $GITHUB_STEP_SUMMARY
        echo "**Workflow Results**: ${{ needs.test-workflows.result }}" >> $GITHUB_STEP_SUMMARY
